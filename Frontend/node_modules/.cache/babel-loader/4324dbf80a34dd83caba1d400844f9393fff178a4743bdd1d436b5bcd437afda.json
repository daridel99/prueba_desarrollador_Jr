{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\daria\\\\Desktop\\\\app\\\\prueba_desarrollador_Jr\\\\Frontend\\\\frontend\\\\src\\\\pages\\\\ViewData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewData = ({\n  actualizar,\n  token\n}) => {\n  _s();\n  const [colecciones, setColecciones] = useState([]);\n  const [seleccionada, setSeleccionada] = useState(\"\");\n  const [datos, setDatos] = useState([]);\n  const [columnas, setColumnas] = useState([]);\n  const [orden, setOrden] = useState({\n    columna: null,\n    direccion: null\n  });\n  const [paginaActual, setPaginaActual] = useState(1);\n  const registrosPorPagina = 50;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n\n  // Obtener colecciones al cargar o al actualizar\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/api/colecciones\").then(res => setColecciones(res.data)).catch(err => console.error(\"Error al obtener colecciones:\", err));\n  }, [actualizar]);\n\n  // Obtener datos al cambiar colecciÃ³n\n  useEffect(() => {\n    if (seleccionada) {\n      axios.get(`http://localhost:8000/api/registros/${seleccionada}`).then(res => {\n        setDatos(res.data);\n        if (res.data.length > 0) {\n          setColumnas(Object.keys(res.data[0]).filter(col => col !== \"_id\"));\n        }\n        setPaginaActual(1); // Reiniciar paginaciÃ³n\n      }).catch(err => console.error(\"Error al obtener datos:\", err));\n    }\n  }, [seleccionada]);\n\n  // Cambiar orden\n  const manejarOrden = columna => {\n    setOrden(prev => {\n      if (prev.columna === columna) {\n        if (prev.direccion === \"asc\") return {\n          columna,\n          direccion: \"desc\"\n        };\n        if (prev.direccion === \"desc\") return {\n          columna: null,\n          direccion: null\n        };\n      }\n      return {\n        columna,\n        direccion: \"asc\"\n      };\n    });\n  };\n\n  // Aplicar orden\n  const datosOrdenados = [...datos];\n  if (orden.columna && orden.direccion) {\n    datosOrdenados.sort((a, b) => {\n      var _a$orden$columna, _b$orden$columna;\n      const valA = ((_a$orden$columna = a[orden.columna]) === null || _a$orden$columna === void 0 ? void 0 : _a$orden$columna.$numberDouble) || a[orden.columna];\n      const valB = ((_b$orden$columna = b[orden.columna]) === null || _b$orden$columna === void 0 ? void 0 : _b$orden$columna.$numberDouble) || b[orden.columna];\n      const strA = typeof valA === \"string\" ? valA : (valA === null || valA === void 0 ? void 0 : valA.toString()) || \"\";\n      const strB = typeof valB === \"string\" ? valB : (valB === null || valB === void 0 ? void 0 : valB.toString()) || \"\";\n      const numA = parseFloat(strA);\n      const numB = parseFloat(strB);\n      if (!isNaN(numA) && !isNaN(numB)) {\n        return orden.direccion === \"asc\" ? numA - numB : numB - numA;\n      } else {\n        return orden.direccion === \"asc\" ? strA.localeCompare(strB) : strB.localeCompare(strA);\n      }\n    });\n  }\n\n  // PaginaciÃ³n\n  const inicio = (paginaActual - 1) * registrosPorPagina;\n  const fin = inicio + registrosPorPagina;\n  const datosPaginados = datosOrdenados.slice(inicio, fin);\n  const totalPaginas = Math.ceil(datosOrdenados.length / registrosPorPagina);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Visualizar Datos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Selecciona una colecci\\xF3n: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSeleccionada(e.target.value),\n      value: seleccionada,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Elige una colecci\\xF3n --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), colecciones.map(col => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: col,\n        children: col\n      }, col, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), seleccionada && datos.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          marginTop: \"20px\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columnas.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              onClick: () => manejarOrden(col),\n              style: {\n                cursor: \"pointer\",\n                backgroundColor: \"#f0f0f0\"\n              },\n              children: [col, orden.columna === col && (orden.direccion === \"asc\" ? \" ðŸ”¼\" : orden.direccion === \"desc\" ? \" ðŸ”½\" : \"\")]\n            }, col, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: datosPaginados.map((row, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columnas.map(col => {\n              var _row$col, _row$col2, _row$col2$toString;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: typeof row[col] === \"object\" && (_row$col = row[col]) !== null && _row$col !== void 0 && _row$col.$numberDouble ? Number(row[col].$numberDouble) : ((_row$col2 = row[col]) === null || _row$col2 === void 0 ? void 0 : (_row$col2$toString = _row$col2.toString) === null || _row$col2$toString === void 0 ? void 0 : _row$col2$toString.call(_row$col2)) || \"\"\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this);\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPaginaActual(p => Math.max(p - 1, 1)),\n          disabled: paginaActual === 1,\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            margin: \"0 10px\"\n          },\n          children: [\"P\\xE1gina \", paginaActual, \" de \", totalPaginas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setPaginaActual(p => Math.min(p + 1, totalPaginas)),\n          disabled: paginaActual === totalPaginas,\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), seleccionada && datos.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay datos en esta colecci\\xF3n.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 46\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewData, \"w1+nNrtqhs+0SMVedigYUcAUdyM=\");\n_c = ViewData;\nexport default ViewData;\nvar _c;\n$RefreshReg$(_c, \"ViewData\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewData","actualizar","token","_s","colecciones","setColecciones","seleccionada","setSeleccionada","datos","setDatos","columnas","setColumnas","orden","setOrden","columna","direccion","paginaActual","setPaginaActual","registrosPorPagina","config","headers","Authorization","get","then","res","data","catch","err","console","error","length","Object","keys","filter","col","manejarOrden","prev","datosOrdenados","sort","a","b","_a$orden$columna","_b$orden$columna","valA","$numberDouble","valB","strA","toString","strB","numA","parseFloat","numB","isNaN","localeCompare","inicio","fin","datosPaginados","slice","totalPaginas","Math","ceil","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","border","style","marginTop","borderCollapse","onClick","cursor","backgroundColor","row","i","_row$col","_row$col2","_row$col2$toString","Number","call","p","max","disabled","margin","min","_c","$RefreshReg$"],"sources":["C:/Users/daria/Desktop/app/prueba_desarrollador_Jr/Frontend/frontend/src/pages/ViewData.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ViewData = ({ actualizar , token}) => {\r\n  const [colecciones, setColecciones] = useState([]);\r\n  const [seleccionada, setSeleccionada] = useState(\"\");\r\n  const [datos, setDatos] = useState([]);\r\n  const [columnas, setColumnas] = useState([]);\r\n  const [orden, setOrden] = useState({ columna: null, direccion: null });\r\n  const [paginaActual, setPaginaActual] = useState(1);\r\n  const registrosPorPagina = 50;\r\n\r\n  const config = {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  };\r\n  \r\n  // Obtener colecciones al cargar o al actualizar\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8000/api/colecciones\")\r\n      .then(res => setColecciones(res.data))\r\n      .catch(err => console.error(\"Error al obtener colecciones:\", err));\r\n  }, [actualizar]);\r\n\r\n  // Obtener datos al cambiar colecciÃ³n\r\n  useEffect(() => {\r\n    if (seleccionada) {\r\n      axios.get(`http://localhost:8000/api/registros/${seleccionada}`)\r\n        .then(res => {\r\n          setDatos(res.data);\r\n          if (res.data.length > 0) {\r\n            setColumnas(Object.keys(res.data[0]).filter(col => col !== \"_id\"));\r\n          }\r\n          setPaginaActual(1); // Reiniciar paginaciÃ³n\r\n        })\r\n        .catch(err => console.error(\"Error al obtener datos:\", err));\r\n    }\r\n  }, [seleccionada]);\r\n\r\n  // Cambiar orden\r\n  const manejarOrden = (columna) => {\r\n    setOrden(prev => {\r\n      if (prev.columna === columna) {\r\n        if (prev.direccion === \"asc\") return { columna, direccion: \"desc\" };\r\n        if (prev.direccion === \"desc\") return { columna: null, direccion: null };\r\n      }\r\n      return { columna, direccion: \"asc\" };\r\n    });\r\n  };\r\n\r\n  // Aplicar orden\r\n  const datosOrdenados = [...datos];\r\n  if (orden.columna && orden.direccion) {\r\n    datosOrdenados.sort((a, b) => {\r\n      const valA = a[orden.columna]?.$numberDouble || a[orden.columna];\r\n      const valB = b[orden.columna]?.$numberDouble || b[orden.columna];\r\n\r\n      const strA = typeof valA === \"string\" ? valA : valA?.toString() || \"\";\r\n      const strB = typeof valB === \"string\" ? valB : valB?.toString() || \"\";\r\n\r\n      const numA = parseFloat(strA);\r\n      const numB = parseFloat(strB);\r\n\r\n      if (!isNaN(numA) && !isNaN(numB)) {\r\n        return orden.direccion === \"asc\" ? numA - numB : numB - numA;\r\n      } else {\r\n        return orden.direccion === \"asc\"\r\n          ? strA.localeCompare(strB)\r\n          : strB.localeCompare(strA);\r\n      }\r\n    });\r\n  }\r\n\r\n  // PaginaciÃ³n\r\n  const inicio = (paginaActual - 1) * registrosPorPagina;\r\n  const fin = inicio + registrosPorPagina;\r\n  const datosPaginados = datosOrdenados.slice(inicio, fin);\r\n  const totalPaginas = Math.ceil(datosOrdenados.length / registrosPorPagina);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Visualizar Datos</h2>\r\n\r\n      <label>Selecciona una colecciÃ³n: </label>\r\n      <select onChange={e => setSeleccionada(e.target.value)} value={seleccionada}>\r\n        <option value=\"\">-- Elige una colecciÃ³n --</option>\r\n        {colecciones.map((col) => (\r\n          <option key={col} value={col}>{col}</option>\r\n        ))}\r\n      </select>\r\n\r\n      {seleccionada && datos.length > 0 && (\r\n        <>\r\n          <table border=\"1\" style={{ marginTop: \"20px\", borderCollapse: \"collapse\" }}>\r\n            <thead>\r\n              <tr>\r\n                {columnas.map((col) => (\r\n                  <th\r\n                    key={col}\r\n                    onClick={() => manejarOrden(col)}\r\n                    style={{ cursor: \"pointer\", backgroundColor: \"#f0f0f0\" }}\r\n                  >\r\n                    {col}\r\n                    {orden.columna === col && (\r\n                      orden.direccion === \"asc\" ? \" ðŸ”¼\" :\r\n                      orden.direccion === \"desc\" ? \" ðŸ”½\" :\r\n                      \"\"\r\n                    )}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {datosPaginados.map((row, i) => (\r\n                <tr key={i}>\r\n                  {columnas.map((col) => (\r\n                    <td key={col}>\r\n                      {typeof row[col] === \"object\" && row[col]?.$numberDouble\r\n                        ? Number(row[col].$numberDouble)\r\n                        : row[col]?.toString?.() || \"\"}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          {/* PaginaciÃ³n */}\r\n          <div style={{ marginTop: \"20px\" }}>\r\n            <button\r\n              onClick={() => setPaginaActual(p => Math.max(p - 1, 1))}\r\n              disabled={paginaActual === 1}\r\n            >\r\n              Anterior\r\n            </button>\r\n\r\n            <span style={{ margin: \"0 10px\" }}>\r\n              PÃ¡gina {paginaActual} de {totalPaginas}\r\n            </span>\r\n\r\n            <button\r\n              onClick={() => setPaginaActual(p => Math.min(p + 1, totalPaginas))}\r\n              disabled={paginaActual === totalPaginas}\r\n            >\r\n              Siguiente\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {seleccionada && datos.length === 0 && <p>No hay datos en esta colecciÃ³n.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}